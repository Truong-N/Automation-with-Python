
SILENTLY CRASHING APPLICATION
Which command can you use to scroll through a lot of text output after tracing system calls of a script?  
 a)strace -o fail.strace ./script.py  
xb)strace ./script.py | less  
 c)strace ./script.py  
 d)strace ./script.py -o fail.strace

QUIZ

Question 1
What is part of the final step when problem solving?
 Documentation
xLong-term remediation
 Finding the root cause
 Gathering information

Question 2
Which tool can you use when debugging to look at library calls made by the software?
 top
 strace
 tcpdump
xltrace

3.What is the first step of problem solving?
 Prevention
XGathering information
 Long-term remediation
 Finding the root cause

4.What software tools are used to analyze network traffic to isolate problems? (Check all that apply)
Xtcpdump
Xwireshark
 strace
 top

5. The strace (in Linux) tool allows us to see all of the _____ our program has made.
 Network traffic
 Disk writes
xSystem calls
 Connection requests

IT DOESN'T WORK
When a user reports that a "website doesn't work," what is an appropriate follow-up question you can use to gather more information about the problem?  
xWhat steps did you perform?  
 Is the server receiving power?  
 What server is the website hosted on?  
 Do you have support ticket number?  

CREATING A REPRODUCTION CASE
A program fails with an error, “No such file or directory.” You create a directory at the expected file path and the program successfully runs. Describe the reproduction case you’ll submit to the program developer to verify and fix this error.  
XA report explaining to open the program without the specific directory on the computer   
 A report with application logs exported from Windows Event Viewer   
 A report listing the contents of the new directory  
 A report listing the differences between strace and ltrace logs.  

FINDING THE ROOT CAUSE
Generally, understanding the root cause is essential for _____?  
 Purchasing new devices  
 Producing test data  
 Avoiding interfering with users  
XProviding the long-term resolution  

DEALING WITH INTERMITTEN ISSUES
What sort of software bug might we be dealing with if power cycling resolves a problem?  
xPoorly managed resources 
A heisenbug  
Logs filling up  
A file remains open

QUIZ
1. When a user reports that an "application doesn't work," what is an appropriate follow-up question to gather more information about the problem?
 Is the server plugged in?
 Why do you need the application?
 Do you have a support ticket number?
XWhat should happen when you open the app?

2. What is a heisenbug?
XThe observer effect.
 A test environment.
 The root cause.
 An event viewer. 

3. The compare_strings function is supposed to compare just the alphanumeric content of two strings, ignoring upper vs lower case and punctuation. But something is not working. Fill in the code to try to find the problems, then fix the problems.

import re
def compare_strings(string1, string2):
  #Convert both strings to lowercase 
  #and remove leading and trailing blanks
  string1 = string1.lower().strip()
  string2 = string2.lower().strip()

  #Ignore punctuation
  punctuation = r"[.?!,;:-']"
  string1 = re.sub(punctuation, r"", string1)
  string2 = re.sub(punctuation, r"", string2)

  #DEBUG CODE GOES HERE
  #print(___)

  return string1 == string2

print(compare_strings("Have a Great Day!", "Have a great day?")) # True
print(compare_strings("It's raining again.", "its raining, again")) # True
print(compare_strings("Learn to count: 1, 2, 3.", "Learn to count: one, two, three.")) # False
print(compare_strings("They found some body.", "They found somebody.")) # False

4. How do we verify if a problem is still persisting or not?
 Restart the device or server hardware
XAttempt to trigger the problem again by following the steps of our reproduction case
 Repeatedly ask the user
 Check again later

5. The datetime module supplies classes for manipulating dates and times, and contains many types, objects, and methods. You've seen some of them used in the dow function, which returns the day of the week for a specific date. We'll use them again in the next_date function, which takes the date_string parameter in the format of "year-month-day", and uses the add_year function to calculate the next year that this date will occur (it's 4 years later for the 29th of February during Leap Year, and 1 year later for all other dates). Then it returns the value in the same format as it receives the date: "year-month-day".   

Can you find the error in the code? Is it in the next_date function or the add_year function? How can you determine if the add_year function returns what it's supposed to? Add debug lines as necessary to find the problems, then fix the code to work as indicated above. 
import datetime
from datetime import date

def add_year(date_obj):
  try:
    print("add_year() print", date_obj)
    new_date_obj = date_obj.replace(year = date_obj.year + 1)
    print("add_year() print", new_date_obj)
    
  except ValueError:
    # This gets executed when the above method fails, 
    # which means that we're making a Leap Year calculation
    new_date_obj = date_obj.replace(year = date_obj.year + 4)
  return new_date_obj

def next_date(date_string):
  print("next_date() print", date_string)
  # Convert the argument from string to date object
  date_obj = datetime.datetime.strptime(date_string, r"%Y-%m-%d")
  print("next_date() print",date_obj)
  next_date_obj = add_year(date_obj)
  print("next_date() print", next_date_obj)
  # Convert the datetime object to string, 
  # in the format of "yyyy-mm-dd"
  next_date_string = next_date_obj.strftime("%Y-%m-%d")
  return next_date_string

today = date.today()  # Get today's date
print(next_date(str(today))) 
# Should return a year from today, unless today is Leap Day

print(next_date("2021-01-01")) # Should return 2022-01-01
print(next_date("2020-02-29")) # Should return 2024-02-29

BINARY SEARCHING A PROBLEM
When searching for more than one element in a list, which of the following actions should you perform first in order to search the list as quickly as possible?  
XSort the list  
 Do a binary search  
 Do a linear search  
 Use a base three logarithm

LINEAR AND BINARY SEARCH
def linear_search(list, key):
	"""If key is in the list returns its position in the list
	otherwise return -1."""
	for i, item in enumerate(list):
		if item == key:
			return i
	return -1

def binary_search(list, key):
	"""Returns the position of key in the list if found, -1 otherwise.
	List must be sorted. """
	left = 0
	right = len(list) - 1
	while left <= right:
		middle = (left + right) // 2
		if list[middle] == key:
			return middle
		if list[middle] > key:
			right = middle -1
		if list[middle] < key:
			left = middle + 1
	return -1

APPLY BINARY SEARCHING IN TROUBLESHOOTING
When troubleshooting an XML configuration file that’s failed after being updated for an application, what would you bisect in the code?  
 File format  
 File quantity  
 Folder location  
XVariables  



quiz
1. You have a list of computers that a script connects to in order to gather SNMP traffic and calculate an average for a set of metrics. The script is now failing, and you do not know which remote computer is the problem. How would you troubleshoot this issue using the bisecting methodology?
xRun the script with the first half of the computers.
 Run the script with last computer on the list.
 Run the script with first computer on the list
 Run the script with two-thirds of the computers.

2.
def find_item(list, item):
  #Returns True if the item is in the list, False if not.
  if len(list) == 0:
    return False
  list.sort()
  #Is the item in the center of the list?
  middle = len(list)//2
  if list[middle] == item:
    return True

  #Is the item in the first half of the list? 
  if item < list[middle]:
    #Call the function with the first half of the list
    return find_item(list[:middle], item)
  else:
    #Call the function with the second half of the list
    return find_item(list[middle+1:], item)

  return False

#Do not edit below this line - This code helps check your work!
list_of_names = ["Parker", "Drew", "Cameron", "Logan", "Alex", "Chris", "Terry", "Jamie", "Jordan", "Taylor"]

print(find_item(list_of_names, "Alex")) # True
print(find_item(list_of_names, "Andrew")) # False
print(find_item(list_of_names, "Drew")) # True
print(find_item(list_of_names, "Jared")) # False

4. When trying to find an error in a log file or output to the screen, what command can we use to review, say, the first 10 lines?
 wc
 tail
xhead
 bisect

5.
def linear_search(list, key):
    #Returns the number of steps to determine if key is in the list 

    #Initialize the counter of steps
    steps=0
    for i, item in enumerate(list):
        steps += 1
        if item == key:
            break
    return ___ 

def binary_search(list, key):
    #Returns the number of steps to determine if key is in the list 

    #List must be sorted:
    list.sort()

    #The Sort was 1 step, so initialize the counter of steps to 1
    steps=1

    left = 0
    right = len(list) - 1
    while left <= right:
        steps += 1
        middle = (left + right) // 2
        
        if list[middle] == key:
            break
        if list[middle] > key:
            right = middle - 1
        if list[middle] < key:
            left = middle + 1
    return ___ 

def best_search(list, key):
    steps_linear = ___ 
    steps_binary = ___ 
    results = "Linear: " + str(steps_linear) + " steps, "
    results += "Binary: " + str(steps_binary) + " steps. "
    if (___):
        results += "Best Search is Linear."
    elif (___):
        results += "Best Search is Binary."
    else:
        results += "Result is a Tie."

    return results

print(best_search([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 1))
#Should be: Linear: 1 steps, Binary: 4 steps. Best Search is Linear.

print(best_search([10, 2, 9, 1, 7, 5, 3, 4, 6, 8], 1))
#Should be: Linear: 4 steps, Binary: 4 steps. Result is a Tie.

print(best_search([10, 9, 8, 7, 6, 5, 4, 3, 2, 1], 7))
#Should be: Linear: 4 steps, Binary: 5 steps. Best Search is Linear.

print(best_search([1, 3, 5, 7, 9, 10, 2, 4, 6, 8], 10))
#Should be: Linear: 6 steps, Binary: 5 steps. Best Search is Binary.

print(best_search([5, 1, 8, 2, 4, 10, 7, 6, 3, 9], 11))
#Should be: Linear: 10 steps, Binary: 5 steps. Best Search is Binary.

UNDERSTANDING SLOWNESS
WHY IS MY COMPUTER SLOW
When addressing slowness, what do you need to identify?
XThe bottleneck
 The device
 The script
 The system

HOW COMPUTER USE RESOURCES
After retrieving data from the network, how can an application access that same data quicker next time?
Use the swap
XCreate a cache
Use memory leak
Store in RAM

POSSIBLE CAUSE OF SLOWNESS
A computer becomes sluggish after a few days, and the problem goes away after a reboot. Which of the following is the possible cause?
 Files are growing too large. 
xA program is keeping some state while running.
 Files are being read from the network. 
 Hard drive failure.
quiz
1. Which of the following will an application spend the longest time retrieving data from?
 CPU L2 cache
 RAM
 Disk
xThe network

2. Which tool can you use to verify reports of 'slowness' for web pages served by a web server you manage?
 The top tool
xThe ab tool
 The nice tool
 The pidof tool

3. If our computer running Microsoft Windows is running slow, what performance monitoring tools can we use to analyze our system resource usage to identify the bottleneck? (Check all that apply)
xPerformance Monitor
xResource Monitor
 Activity Monitor
 top 

4. Which of the following programs is likely to run faster and more efficiently, with the least slowdown?
 A program with a cache stored on a hard drive
xA program small enough to fit in RAM
 A program that reads files from an optical disc
 A program that retrieves most of its data from the Internet

5. What might cause a single application to slow down an entire system? (Check all that apply)
xA memory leak
 The application relies on a slow network connection
xHandling files that have grown too large
 Hardware faults

1. Which of the following is NOT considered an expensive operation?
 Parsing a file
 Downloading data over the network
 Going through a list
xUsing a dictionary

2. Which of the following may be the most expensive to carry out in most automation tasks in a script?
xLoops
 Lists
 Vector
 Hash

3. Which of the following statements represents the most sound advice when writing scripts?
 Aim for every speed advantage you can get in your code
 Use expensive operations often
xStart by writing clear code, then speed it up only if necessary
 Use loops as often as possible

4. In Python, what is a data structure that stores multiple pieces of data, in order, which can be changed later?
 A hash
 Dictionaries
xLists
 Tuples

5. What command, keyword, module, or tool can be used to measure the amount of time it takes for an operation or program to execute? (Check all that apply)
xtime
xkcachegrind
xcProfile
 break

PARALELIZING OPERATION
A script is _____ if you are running operations in parallel using all available CPU time.  
 I/O bound  
 Threading  
XCPU bound  
 Asyncio  

DEALING WITH COMPLEX SLOW SYSTEMS
A company has a single web server hosting a website that also interacts with an external database server. The web server is processing requests very slowly. Checking the web server, you found the disk I/O has high latency. Where is the cause of the slow website requests most likely originating from?  
XLocal disk  
 Remote database  
 Slow Internet  
 Database index

USING THREADS TO MAKE THINGS GO FASTER
cd thumbnail_generator/
time ./thumbnail_generator.py
real 0m1.962s
user 0m1.898s
sys 0m0.065s
atom thumnail_generator.py
#!/usr/bin/env python3
from concurrent import futures
import argparse
import logging
import os
import sys

import PIL
import PIL.Image

from tqdm import tqdm

def process_options():
kwargs = {
'format': '[%(levelname)s] %(message)s',
}

parser = arfparse.ArgumentParser(
description='Thumbnail generator',
fromfile_prefix_chars='0'
)
parser.add_argument('--debug', action='store_true')
parser.add_argument('-v', '--verbose', action='store_true')
parser.add_argument('-q', '--quiet', action='store_true')

filename = f'{root}/{basename}'
image = PIL.Image.open(filename)

size = (128, 128)
image.thumbnail(size)

new_name = f'thumbnails/{basename}'
image.save(new_name, "JPEG")
return new_name

def progress_bar(files):
return tqdm(files, desc='Processing', total=len(files), dynamic_ncols=True)

def main():
process_options()

# Create the thumbnail
if not ospath.exists('thumbnails'):
os.mkdir('thumbnails')

executor = futures.ThreadPoolExecutor() #1
executor = futures.ProcessPoolExecutor()
for root, _, files in os.walk('images'):
for basename in prograss_bar(files):
if not basename.endwith('.jps'):
continue
executor.submit(process_file, root, basename)
print('Waiting for all threads to finish.')
executor.shutdown()
return 0

if __name__ == "__main__":
sys.exit(main())

Which module makes it possible to run operations in a script in parallel that makes better use of CPU processing time?  
 Executor  
xFutures  
 Varnish  
 Concurrency  
1. Which of the following can cache database queries in memory for faster processing of automated tasks?
 Threading
 Varnish
XMemcached
 SQLite

2. What module specifies parts of a code to run in separate asynchronous events?
 Threading
 Futures
XAsyncio
 Concurrent

3. Which of the following allows our program to run multiple instructions in parallel?
XThreading
 Swap space
 Memory addressing
 Dual SSD

4. What is the name of the field of study in computer science that concerns itself with writing programs and operations that run in parallel efficiently?
 Memory management
XConcurrency
 Threading
 Performance analysis

5. What would we call a program that often leaves our CPU with little to do as it waits on data from a local disk and the Internet?
 Memory-bound
 CPU-bound
 User-bound
XI/O bound

multisync.py
#!/usr/bin/env python3
from multiprocessing import Pool
def run(task):
# Do somthing with task here
print("Handling {}".format(task))

if __name__ == "__main__":
tasks = ['task1', 'task2', 'task3']
# Create a pool of specific number of CPUs
p = Pool(len(tasks))
# Start each task with the pool
p.map(run, tasks)

dailysync.py
#!/usr/bin/env pthon3
import subprocess
scr = "/data/prod/"
dest = "/data/prod_backup/"
subprocess.call("rsync", "-arq", src, dest])

SYSTEMS THAT CRASH
A user reported an application crashes on their computer. You log in and try to run the program and it crashes again. Which of the following steps would you perform next to reduce the scope of the problem?  
 Check the health of the RAM  
 Switch the hard drive into another computer  
 Check the health of the hard drive  
XReview application logs  

UNDERSTANDING CRASHING APPLICATION
Where should you look for application logs on a Windows system?  
 The /var/log directory  
 The .xsession-errors file  
 The Console app  
xThe Event Viewer app  

WHAT TO DO WHEN YOU CAN'T FIX THE PROGRAM?
An application fails in random intervals after it was installed on a different operating system version. What can you do to work around the issue?  
 Use a wrapper  
xUse a container  
 Use a watchdog  
 Use an XML format  
 
 INTERNAL SERVER ERROR
cmd: date
cmd: cd /var/log/
cmd: ls -lt | head
cmd: tail syslog
cmd: sudo netstat -nlp | grep :80
cmd: ls -l /etc/nginx/
cmd: ls -l /ect/nginx/sites-enabled/
cmd: vim /ect/nginx/sites-enabled/site.example.com.conf
server {
	listen 80;
	listen [::]:80;

PRIORITIZING TASKS
Using a basic structure to organize and prioritize tasks, what’s the next thing you should do after creating a list of all the tasks you need to complete?  
 Sort tasks in groups.  
 Assess the importance of each issue.  
 Complete most urgent tasks immediately. /Woohoo! The most urgent tasks should be done immediately after completing the list.
 Estimate the amount of effort. /Not quite. One of the last things to do is figure out which remaining tasks are the most important or the biggest and complete those.
	server_name site.example.com;
	root /var/www/site.example.com;
	index index.html;

	location / {
		include uwsgi_params;
		uwsgi_pass 127.0.0.1:3031;
	}
}
cmd: ls -l /ect/uwsgi/
cmd: ls -l /ect/uwsgi/apps-enabled/
cmd: vim /ect/uwsgi/apps-enabled/site.example.com.conf
[uwsgi]
chdir = /srv/site.example.com
uid = www-data
gid = www-data
plugins = python3
wsgi-file = prod.py
callable = app

plugins = logfile
logger = logs file:/var/log/site.log
log-route = log .*

processes = 4
threads = 2
socket = 127.0.0.1:3031
stats = 127.0.0.1:9191

cmd: ls -l site.log
cmd: vi /srv/site.example.com/prod.py
cmd: sudo vi /srv/site.example.com/prod.py
cmd: sudo service uwsgi reload
cmd: ls -l site*
cmd: sudo chowner www-data.www-data site.log

Where is a common location to view configuration files for a web application running on a Linux server?  
x/etc/<app folder>  
 /var/log/<app folder>  
 /srv/<app folder>  
 /<app folder>  

Why was the ownership of the file wrong?
We suspect that there might be something wrong with the log rotate configuration but we'd need to keep looking to find out what's up with that.
In this video, we looked into how we can figure out what's up with an application that's failing.
We checked out a bunch of different tools and ideas that can help us understand what's going on and get more information until we can find the root cause.
I hope we're starting to see how these lessons provide valuable tools for diagnosing and solving issues that will for sure occur at your job.
Up next, we have a reading with some links to learn more about different things that can make your computer crash, then a quick practice quiz.
Resources for Understanding Crashes

There's a ton of different reasons why a computer might crash. This Scientific American article discusses many of the possible reasons, including hardware problems and issues with the overall operating system or the applications on top. 
On Linux or MacOS, the worst kind of crash is called a Kernel Panic. On Windows, it's known as the Blue Screen of Death. These are situations where the computer completely stops responding and only a reboot can make it work again. They don't happen often, but it's good to understand what they mean: the whole OS encountered an error and it can't recover.
We called out that reading logs is super important. You should know how to read logs on the operating system that you're using. Here are some resources for this:
    How to find logs on Windows 10 (Digital Masters Magazine)
    How to view the System Log on a Mac (How-to Geek)
    How to check system logs on Linux (FOSS Linux) 
You also need to be familiar with the tools available in your OS to diagnose problems. These are the tools we called out, but you don't need to limit yourself to them:
    Process Monitor for Windows (Microsoft)
    Linux strace command tutorial for beginners (HowtoForge)  
    How to trace your system calls on Mac OS (/etc/notes)
quiz
1. When using Event Viewer on a Windows system, what is the best way to quickly access specific types of logs?
 Export logs
xCreate a custom view
 Click on System Reports
 Run the head command

2. An employee runs an application on a shared office computer, and it crashes. This does not happen to other users on the same computer. After reviewing the application logs, you find that the employee didn’t have access to the application. What log error helped you reach this conclusion?
 “No such file or directory”
 “Connection refused”
x“Permission denied”
 “Application terminated”

3. What tool can we use to check the health of our RAM?
 Event Viewer
 S.M.A.R.T. tools
xmemtest86
 Process Monitor

4. You've just finished helping a user work around an issue in an application. What important but easy-to-forget step should we remember to do next?
 Fix the code
xReport the bug to the developers 
 Reinstall the program
 Change the user’s password

5. A user is experiencing strange behavior from their computer. It is running slow and lagging, and having momentary freeze-ups that it does not usually have. The problem seems to be system-wide and not restricted to a particular application. What is the first thing to ask the user as to whether they have tried it?
 Adding more RAM
 Reinstalling Windows
xIdentified the bottleneck with a resource monitor
 Upgrade their HDD to an SSD
 
CODE THAT CRASS
ACCESSING INVALID MEMORY
Which of the following can assist in finding out if invalid operations are occurring in a program running on a Windows system?  
 Valgrind  
xDr. Memory  
 PBD files  
 Segfaults  
 
UNHANDLED ERRORS AND EXCEPTIONS
What can you use to notify users when an error occurs, the reason why it occurred, and how to resolve it?  
 The pdb module  
xThe logging module  
 Use printf debugging  
 The echo command  
 
FIXING SOMEONE ELSE'S CODE
After getting acquainted with the program’s code, where might you start to fix a problem?  
 Run through tests  
 Read the comments  
XLocate the affected function  
 Create new tests  
 
 DEBUGGING A SEGMENTATION FAULT
cmd: ls -l core
When debugging code, what command can you use to figure out how your program reached the failed state?  
 gdb  
xbacktrace  
 ulimit  
 list  
 
DEBUGGING A PYTHON CRASH
When debugging in Python, what command can you use to run the program until it crashes with an error?
 pdb3
 next
xcontinue
 KeyError

QUIZ
1. Which of the following will let code run until a certain line of code is executed?
XBreakpoints
 Watchpoints
 Backtrace
 Pointers
2. Which of the following is NOT likely to cause a segmentation fault?
 Wild pointers
 Reading past the end of an array
 Stack overflow
XRAM replacement
3. A common error worth keeping in mind happens often when iterating through arrays or other collections, and is often fixed by changing the less than or equal sign in our for loop to be a strictly less than sign. What is this common error known as?
 Segmentation fault
 backtrace
 The No such file or directory error
XOff-by-one error
4. A very common method of debugging is to add print statements to our code that display information, such as contents of variables, custom error statements, or return values of functions. What is this type of debugging called?
 Backtracking
 Log review
XPrintf debugging
 Assertion debugging
5.  When a process crashes, the operating system may generate a file containing information about the state of the process in memory to help the developer debug the program later. What are these files called?
 Log files
XCore files
 Metadata file
 Cache file
 
Check out the following links for more information:
    https://realpython.com/python-concurrency/
    https://hackernoon.com/threaded-asynchronous-magic-and-how-to-wield-it-bba9ed602c32
    https://stackoverflow.com/questions/33047452/definitive-list-of-common-reasons-for-segmentation-faults
    https://sites.google.com/a/case.edu/hpcc/home/important-notes-for-new-users/debugging-segmentation-faults
Readable Python code on GitHub:
    https://github.com/fogleman/Minecraft
    https://github.com/cherrypy/cherrypy
    https://github.com/pallets/flask
    https://github.com/tornadoweb/tornado
    https://github.com/gleitz/howdoi
    https://github.com/bottlepy/bottle/blob/master/bottle.py
    https://github.com/sqlalchemy/sqlalchemy
    
HANDLING BIGGER INCIDENTS
CRASH IN COMPLEX SYSTEM
A website is producing service errors when loading certain pages. Looking at the logs, one of three web servers isn’t responding correctly to requests. What can you do to restore services, while troubleshooting further?  
 Deploy a new web server  
 Roll back application changes  
xRemove the server from the pool  
 Create standby servers  
 
COMMUNICATION AND DOCUMENTATION DURING INCIDENT
Which of the following persons is responsible for communicating with customers that are affected by an access issue with a website?  
x Communications lead  
 Manager  
 Incident controller  
 Software engineer  

WRITING EFFECTIVE POSTMORTERM
When writing an effective postmortem of an incident, what should you NOT include?  
 What caused the issue  
XWho caused the issue  
 What the impact was  
 The short-term remediation  

Practice Quiz: Handling Bigger Incidents

1. Which of the following would be effective in resolving a large issue if it happens again in the future?
 Incident controller
XPostmortem
 Rollbacks
 Load balancers
2. During peak hours, users have reported issues connecting to a website. The website is hosted by two load balancing servers in the cloud and are connected to an external SQL database. Logs on both servers show an increase in CPU and RAM usage. What may be the most effective way to resolve this issue with a complex set of servers?
 Use threading in the program
 Cache data in memory
XAutomate deployment of additional servers
 Optimize the database
3. It has become increasingly common to use cloud services and virtualization. Which kind of fix, in particular, does virtual cloud deployment speed up and simplify?
XDeployment of new servers 
 Application code fixes
 Log reviewing
 Postmortems
4. What should we include in our postmortem? (Check all that apply)
XRoot cause of the issue
XHow we diagnosed the problem
XHow we fixed the problem
 Who caused the problem
5. In general, what is the goal of a postmortem? (Check all that apply)
 To identify who is at fault
XTo allow prevention in the future
XTo allow speedy remediation of similar issues in the future
 To analyze all system bugs
 
 MANAGING COMPUTER RESOURCES
 MANAGING RESOURCES

MEMORY LEAKS AND HOW TO PREVENT THEM
Which of the following descriptions most likely points to a possible memory leak?  
xApplication process uses more memory even after a restart.  
 Garbage collector carries out its task.  
 The function returns after it completes.  
 Valgrind figures out memory usage.  
 
MANAGING DISK SPACE
Which of the following is an example of unnecessary files on a server storage device that can affect applications from running if not cleaned up properly?  
 A SQL database  
 A mailbox database  
 A set of application files  
xA set of large temporary files (Large temporary files may remain if an application crashes because it’s not cleaned up automatically.) 

NETWORK SATURATION
The custom application running on a server can’t receive new connections. Existing connections are sending and receiving data in a reasonable time. Which of the following explains the reason why new sessions can’t be established with the server?
xToo many connections (There are limits to how many connections a single server can have, which will prevent new connections.)
 High network latency (Not quite. High latency will delay data transfer, but not prevent it.  ) 
 Low network bandwidth (Incorrect Not quite. Low network bandwidth will increase latency ) 
 No traffic shaping (Not quite. No traffic shaping can increase latency if there isn’t enough bandwidth to seen large files over the network.  )
 
 DEALING WITH MEMORY LEAKS
cmd: uxterm &
cmd: od -cx /dev/urandom

More About Managing Resources
Check out the following links for more information:
    https://realpython.com/python-concurrency/
    https://hackernoon.com/threaded-asynchronous-magic-and-how-to-wield-it-bba9ed602c32
    https://www.pluralsight.com/blog/tutorials/how-to-profile-memory-usage-in-python
    https://www.linuxjournal.com/content/troubleshooting-network-problems

Practice Quiz: Managing Computer Resources

1. How can you profile an entire Python application?
1 point
 Use an @profile label (An @profile label is used to profile a single function or method.)
xUse the guppy module (Guppy is a Python library with tools to profile an entire Python application.)
 Use Memory Profiler (Memory profiler is a module for monitoring memory consumption of a process over time.)
 Use a decorator (A label like @profile is called a decorator, which adds extra behavior to functions without modifying the 	code.)

2. Your application is having difficulty sending and receiving large packets of data, which are also delaying other processes when connected to remote computers. Which of the following will be most effective on improving network traffic for the application?
 Running the iftop program (The iftop program can assist in gathering statistics on network usage from each active session.)
 Increase storage capacity (The issue isn’t related to writing data to disk.)
 Increase memory capacity ( The issue isn’t related to having enough memory to process code.)
xUse traffic shaping (Traffic shaping can mark data packets and assign higher priorities when being sent over the network.)

3. What is the term referring to the amount of time it takes for a request to reach its destination, usually measured in milliseconds (ms)?
 Bandwidth (Bandwidth refers to the amount of data that can be transferred in one second.)
xLatency (Latency is a measure of the time it takes for a request to reach its destination.)
 Number of connections (While the number of connections can certainly slow things down, it isn't measured in milliseconds.)
 Traffic shaping (Traffic shaping is a bandwidth control technique used in computer networks that delays any or all of the 		datagrams to adhere to a specified traffic profile.)

4. If your computer is slowing down, what Linux program might we use to determine if we have a memory leak and what process might be causing it?
xtop (The top command will show us all running processes and their memory usage in Linux.)
 gparted (The gparted application is used for partitioning disk drives.)
 iftop (The iftop command will show us which processes are currently using network connections.)
 cron (The cron utility is a time-based job scheduler in Linux and Unix environments.)
5. Some programs open a temporary file, and immediately _____ the file before the process finishes, then the file continues to grow, which can cause slowdown.
 open ( The file was presumably already open.)
 close (A closed file should remain static.)
xdelete (Sometimes a file is marked as deleted right after it is opened, so the program doesn't "forget" later. The file is then written to, but we can't see this as the file is already marked as deleted, but will not actually be deleted until the process is finished.)
 write to (The file will often be written to after being deleted first (yes, you read that right!))
 
 MANAGING OUR TIME

So assuming that you've managed to set some time aside to work on these important but not urgent tasks, how do you make sure that you work on the right things with the right priorities?
That's coming up in our next video.
Which of the following describes a technical debt?  
xRestarting a web server that has suspended services./Restarting a server is a quick-fix or short-term remediation, which is also known as technical debt.  
 Rewriting a program to prevent memory leaks.  
 Setting up traffic shaping to improve communication with remote services.  
 Adding a hard drive to make room to install the application.   
 
 ESTIMATE THE TIME TASK WILL TAKE
Question: Which of the following factors will be most beneficial in estimating the time it will take for you to complete a specific project?  
 Be overly optimistic with your time. /Not quite. You should avoid being overly optimistic with your time estimates. 
 Multiply the estimate by a random factor. /Not quite. Time estimates should be multiplied by a well-thought-out factor based on previous projects or experience.   
 Double your time. /Not quite. Not all time estimates should be doubled. 
 Compare time used to similar projects or tasks. /The best way to estimate time on a new project is to compare your estimate to similar tasks or projects completed previously.   
 
COMMUNICATION EXPECTATION
Question: Which of the following is an example of a practical shortcut to resolve incidents in a datacenter related to hard drive pre-failures?  
  Spare drives /Spare drives are a practical shortcut that can quickly replace hard drives in a pre-fail state. 
  Automated RAID scripts/ Not quite. Using a script to create a RAID can only be performed once the drives and servers are in place for configuration.  
  Spare servers/ Not quite. Spare servers are a practical shortcut that relates to replacing a completely failed server.  
  Automated server scripts. /Not quite. Using a script to configure a server can only be performed once basic server settings are in place (i.e., Management IP address). 

More About Making the Best Use of Our Time
Check out the following link for more information:
    https://blog.rescuetime.com/how-to-prioritize/
    
Practice Quiz: Managing Our Time

1. Using the Eisenhower Decision Matrix, which of the following is an example of an event or task that is both Important, and Urgent?
 Office gossip
 Replying to emails
xInternet connection is down /It’s important for users to have Internet to work, and it must be resolved right away.
 Follow-up to a recently resolved issue

2. You’re working on a web server issue that’s preventing all users from accessing the site. You then receive a call from user to reset their user account password. Which appropriate action should you take when prioritizing your tasks?
 Reset the user's password/ Although resetting a user's password may be quick, the web server issue must take priority because it’s affecting all users.
 Create a script to automate password resets
xAsk the user to open a support ticket.
 Ignore the user, and troubleshoot web server./ Not quite. A user should never be ignored.Instead, inform the user on other actions to do before moving on.

3. What is it called when we make more work for ourselves later by taking shortcuts now?
xTechnical debt /Technical debt is defined as the implied cost of additional rework caused by choosing an easy (limited) solution now instead of using a better, but more difficult, solution.
 Ticket tracking
 Eisenhower Decision Matrix
 Automation

4. What is the first step of prioritizing our time properly?
 Work on urgent tasks first /Not quite. Before we can compare urgency, we need to list our tasks.
 Assess the importance of each issue
xMake a list of all tasks /Before we can even decide which task to do first, we need to make a list of our tasks.
 Estimate the time each task will take

5. If an issue isn't solved within the time estimate that you provided, what should you do? (Select all that apply)
xExplain why /Communication is key, and it’s best to keep everyone informed.
 Drop everything and perform that task immediately
xGive an updated time estimate / If your original estimate turned out to be overly optimistic, it’s appropriate to re-estimate.
 Put the task at the end of the list
 
DEALING WITH HARD PROBLEMS
When facing a problem with a service, which of the following examples can remediate the issue quickly for the short-term?  
 Create tests for the program before coding. /Not quite. Creating tests before coding can ensure a quality program, but it doesn’t provide short-term remediation.  
 Develop codes in small chunks. /Not quite. Developing a program in small chunks can simplify the program so it’s understandable, making it easier to work through if issues arise.  
xAsk someone who has solved the issue before for help. /Someone who has solved the issue before can apply the short-term remediation right away, and long-term solutions can be discussed later.  
 Grab a cup of coffee. /Not quite. Walking away for a bit may produce other ideas to solve the problem for the short-term, but thinking on your own may still take some time. 
 
PROACTIVE PRACTICE
Which proactive practice can you implement to make troubleshooting issues in a program easier when problems arise?  
 Use a test environment.  
 Build infrastructure for rollbacks.  
 Set up integration tests  
 Include debug logging in code. /Great work!. Including debug logging in code can make troubleshooting easier because logs can help pinpoint the actual issue, and speed up remediation.   

PLANNING FUTURE RESOURCE USAGE
You have a small rack of servers and other components that make up a virtual infrastructure. This rack hosts virtual machines that provide web services, and user file shares to employees in the local office, and immediate regional branches. Which component in the rack can be most easily planned for future growth?  
	CPU Capacity  
	RAM Capacity  
	NAS capacity /Nice job! Network Attached Storage (NAS) products from vendors like NetApp can provide additional shelves to add more storage as the website’s content, and users’ data increases in size.   
	Network bandwidth  /Not quite. An engineer must consider changes in cables, ports, switches, routers, and ISP services; none of which are easy to plan for.  

PREVENTING FURTURE PROBLEMS
Which of the following is the most effective way to prevent an issue in a program that you own from happening again?  
 	Report a bug /Not quite. Bug reports are sent to external developers, not to yourself. 
X 	Write a test /When updating code to fix an issue, create a new test to ensure the change performs the intended actions.  
	Monitor resources  
	Reproduction case

Practice Quiz: Making Our Future Lives Easier

1. Which proactive practice can you implement to make troubleshooting issues in a program easier when they happen again, or face other similar issues?
 Create and update documentation
 Use a test environment.
 Automate rollbacks./Not quite. Rollbacks are beneficial, for example, when an upgrade fails on a few computers, and they need to be reverted back to their previous state.
 Set up Unit tests./Not quite. Unit tests are beneficial when developing, or updating code.

2. Which of the following is a good example of mixing and matching resources on a single server so that the running services make the best possible use of all resources?
 Run two applications that are CPU intensive between two servers.
 Run a CPU intensive application on one server, and an I/O intensive application on another server.
XRun a RAM intensive application and a CPU intensive application on a server./An application that uses a lot of RAM can still run while CPU is mostly used by another application on the same server.
 Run two applications that are RAM and I/O intensive on a server./Not quite. Two applications are maxing out the same resources on a single server.

3. One strategy for debugging involves explaining the problem to yourself out loud. What is this technique known as?
 Monitoring
XRubber Ducking /Rubber ducking is the process of explaining a problem to a "rubber duck", or rather yourself, to better understand the problem.
 Testing
 Ticketing

4. When deploying software, what is a canary? 
 A test for how components of a program interact with each other/Not quite. When we test how components interact with each other, we are doing integration testing.
 A test of a program’s components/Not quite. A unit test is a test of separate portions of code, tested independently.
 A test deployment to a subset of production hosts
 A small section of code

5. It is advisable to collect monitoring information into a central location. Given the importance of the server handling the centralized collecting, when assessing risks from outages, this server could be described as what?
XA failure domain/Awesome! A failure domain is a logical or physical component of a system that might fail.
 A problem domain/Not quite. The problem domain is a description of the problem itself.
 CPU intensive
 I/O intensive  
